# yaml-language-server: $schema=https://raw.githubusercontent.com/ast-grep/ast-grep/main/schemas/rule.json

id: python-static-compute-slice
message: python-static-compute-slice
language: Python
rule:
  kind: subscript
  all:
    - has:
        field: value
        kind: string
        pattern: $DATA
        all:
          # avoid f-strings for now
          - not:
              has:
                kind: string_start
                regex: "^(f|F)"
    - has:
        field: subscript
        kind: slice
        pattern: $SLICE
        # number: ([:+\-\(\) ^*]+((0x|0X|0b|0B|0o|0O|[1-9])[0-9a-fA-F_]+)+
        regex: ^[0-9:+\-\(\)\^\\* ]{1}[0-9:+\-\(\)\^\\* _]+$
        #regex: ^([:+\-\(\) ^*]*((0x|0X|0b|0B|0o|0O|[1-9])[0-9a-fA-F_]*)[:\)]*)+$
    - any:
        - pattern: $_[$SLICE_START:$SLICE_END:$SLICE_STEP]
        - pattern: $_[$SLICE_START:$SLICE_END]
        - pattern: $_[:$SLICE_END]
        - pattern: $_[::$SLICE_STEP]
        - pattern: $_[:]
        - pattern: $_[$SLICE_START:]

metadata:
  extended-obfuscation: yes
  alone-unimportant: yes
  deobfuscate: |
    {
      "type": "fix-generate",
      "steps": [
        {"func": "math_eval", "source": "SLICE_START"},
        {"func": "math_eval", "source": "SLICE_END"},
        {"func": "math_eval", "source": "SLICE_STEP"},
        {"func": "dequote", "source": "DATA", "output": "DATA", "decode": false},
        {"func": "slice", "source": "DATA"},
        {"func": "quote", "source": "DATA"}
      ]
    }

