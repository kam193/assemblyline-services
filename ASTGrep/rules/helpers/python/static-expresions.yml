# yaml-language-server: $schema=https://raw.githubusercontent.com/ast-grep/ast-grep/main/schemas/rule.json

id: python-static-math-expression
message: Evaluating static expressions
language: Python
rule:
  matches: original

utils:
  original:
    pattern: $EXPRESSION
    all:
      - matches: allowed_kinds
      - not:
          has:
            pattern: $_
            stopBy: end
            not:
              any:
                - matches: allowed_kinds
                - inside:
                    field: operator
                    pattern: $A
      - not:
          inside:
            matches: allowed_kinds
            stopBy: end
      - not:
          kind: unary_operator
          all:
            - has:
                field: operator
                pattern: "-"
            - has:
                field: argument
                any:
                  - kind: integer
                  - kind: float
      - has:
          pattern: $_
  allowed_kinds:
    any:
      - kind: binary_operator
      - kind: unary_operator
      - kind: parenthesized_expression
      # - kind: not_operator # TODO: handle this safely - requires changes in the eval validation
      - kind: integer
      - kind: float
      - kind: integer
      - kind: comparison_operator
      # - pattern: "-"
      # - pattern: "+"
      # - pattern: "*"
      # - pattern: "/"
      # - pattern: "~"
      # - pattern: "^"

metadata:
  extended-obfuscation: no
  confirmed-obfuscation: no
  deobfuscate: |
    {
      "type": "fix-generate",
      "steps": [
        {"func": "math_eval", "source": "EXPRESSION"}
      ]
    }

---

yaml-language-server: $schema=https://raw.githubusercontent.com/ast-grep/ast-grep/main/schemas/rule.json

id: python-static-string-replace
message: Evaluate static replacement in strings
language: Python
rule:
  # "aaaaa".replace("a", "b")
  kind: call
  all:
    - has:
        field: function
        has:
          field: object
          kind: string
          pattern: $SOURCE
        all:
          - has:
              field: attribute
              pattern: replace
    - has:
        field: arguments
        all:
          - has:
              nthChild: 1
              kind: string
              pattern: $PATTERN
          - has:
              nthChild: 2
              kind: string
              pattern: $REPLACEMENT

metadata:
  extended-obfuscation: no
  confirmed-obfuscation: no
  deobfuscate: |
    {
      "type": "fix-generate",
      "steps": [
        {"func": "dequote", "source": "SOURCE", "output": "SOURCE"},
        {"func": "dequote", "source": "PATTERN", "output": "PATTERN"},
        {"func": "dequote", "source": "REPLACEMENT", "output": "REPLACEMENT"},
        {"func": "replace", "source": "SOURCE", "pattern": "PATTERN", "replacement": "REPLACEMENT", "output": "SOURCE"},
        {"func": "quote", "source": "SOURCE"}
      ]
    }
