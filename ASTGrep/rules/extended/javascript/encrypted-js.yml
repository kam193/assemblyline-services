# yaml-language-server: $schema=https://raw.githubusercontent.com/ast-grep/ast-grep/main/schemas/rule.json
id: obfuscation-encrypted-js-aes
language: JavaScript
message: The code was obfuscated using AES encryption
severity: error
metadata:
  category: obfuscation
  extended-obfuscation: yes
  score: 100
  template_file: javascript/const-var-tpl.j2
  deobfuscate: |
    {
      "type": "fix-template",
      "extract": true,
      "steps": [
        {"func": "encode", "source": "IV", "encoding": "hex"},
        {"func": "encode", "source": "SALT", "encoding": "hex"},
        {"func": "encode", "source": "AUTH_TAG", "encoding": "hex"},
        {"func": "encode", "source": "DATA", "encoding": "hex"},
        {"func": "scrypt", "output": "KEY"},
        {"func": "slice", "source": "KEY", "output": "KEY"},
        {"func": "aes", "source": "DATA"}
      ]
    }
rule:
  pattern:
    context: const $VAR_NAME = $DECRYPT('$DATA', '$AUTH_TAG', '$SALT', '$IV', "$MASTER_KEY")
    strictness: signature
  # kind: lexical_declaration

  follows:
    stopBy: end
    kind: function_declaration
    pattern:
      context: function $DECRYPT(encdata, $AUTH_TAG_PARAM, $SALT_PARAM, $IV_PARAM, $MASTER_PARAM) { $$$ }
      strictness: signature
    has:
      stopBy: end
      all:
        - pattern:
            context: "const $KEY_2 = crypto.scryptSync($MASTER_PARAM, Buffer.from($SALT_PARAM, 'hex'), $KEY_LENGTH, { N: $OPT_N, r: $OPT_R, p: $OPT_P }).slice($SLICE_START, $SLICE_END)"
            strictness: signature
            # selector: lexical_declaration
            stopBy: end
            preceeds:
              pattern:
                context: const $DECIPHER = crypto.createDecipheriv('$AES_MODE', $KEY, Buffer.from($IV_PARAM, 'hex'));
                strictness: signature
                stopBy: end
                preceeds:
                  pattern:
                    context: $DECIPHER.setAuthTag(Buffer.from($AUTH_TAG_PARAM, 'hex'));
                    strictness: signature
                    stopBy: end
