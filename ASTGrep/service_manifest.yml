name: ASTGrep
version: $SERVICE_TAG
description: |
  Service using AST-grep to analyze the source code to detect obfuscation and reverse it.
  Currently focused on Python code.
enabled: true

accepts: code/*|text/*
rejects: empty
stage: CORE
category: Static Analysis
uses_tags: false
file_required: true
timeout: 150
is_external: false

config:
  # LSP keeps the ast-grep process running in the background
  # reducing the startup time for subsequent requests
  # but may be less stable
  USE_LANGUAGE_SERVER_PROTOCOL: true
  EXTRACT_INTERMEDIATE_LAYERS: false
  TRY_LANGUAGE_FROM_EXTENSION: true

submission_params:
  - default: true
    name: reformat_deobfuscated_code
    type: bool
    value: true
  - default: false
    name: extract_not_confirmed
    type: bool
    value: false
  - default: true
    name: extract_binary_data
    type: bool
    value: true

heuristics:
  - description: Suspicious code pattern
    filetype: "*"
    heur_id: 1
    name: Suspicious code pattern
    score: 300
    max_score: 500
  - description: Malicious code pattern
    filetype: "*"
    heur_id: 2
    name: Malicious code pattern
    score: 1000
    max_score: 2000
  - description: Informative code pattern
    filetype: "*"
    heur_id: 3
    name: Informative code pattern
    score: 10
    max_score: 50
  - description: Obfuscation was found in the source code
    filetype: "*"
    heur_id: 4
    name: Code was obfuscated
    score: 500
    # max_score: 500
  - description: Code might have been obfuscated, but no strong indicators were found
    filetype: "*"
    heur_id: 5
    name: Possible obfuscation
    score: 50
    max_score: 200
  - description: More than 10 layers of possible obfuscation could have been extracted
    filetype: "*"
    heur_id: 6
    name: Many layers of obfuscation
    score: 300
    max_score: 300

docker_config:
  image: ${REGISTRY}ghcr.io/kam193/assemblyline-service-astgrep:$SERVICE_TAG
  cpu_cores: 1.0
  ram_mb: 1024
  ram_mb_min: 256
  allow_internet_access: false

